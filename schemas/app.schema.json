{
  "$id": "https://github.com/voltaos/repoTemplate/tree/master/schemas/app.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "App",
  "type": "object",
  "properties": {
    "App": {
      "type": "object",
      "description": "VoltaOS App specifications",
      "properties": {
        "id": {
          "type": "string",
          "description": "App Unique Identifier",
          "patter": "^[a-zA-Z0-9-_]+$"
        },
        "name": {
          "type": "string",
          "description": "App Name"
        },
        "icon": {
          "type": "string",
          "description": "App Icon name",
          "pattern": ".*\\.(webp|png|gif)"
        },
        "description": {
          "type": "string",
          "description": "App Description",
          "minItems": 1,
          "uniqueItems": true
        },
        "categories": {
          "type": "array",
          "description": "App Categories (Must exist in categories.json file)",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "directory": {
          "type": "string",
          "description": "App directory name inside voltaos/repository/Apps (Usually the app name)",
          "pattern": "^[a-zA-Z0-9-_]+$"
        }
      },
      "required": ["id", "name", "description", "categories", "icon", "directory"],
      "examples": [{
        "id": "welcome",
        "name": "VoltaOS Example app",
        "description": "VoltaOS App Template",
        "categories": [
          "example"
        ],
        "icon": "example.png",
        "directory": "welcome"
      }]
    },
    "Services": {
      "description": "Docker-compose style services list but expanded to allow Volta customizability",
      "type": "object",
      "properties": {
        "images": {
          "type": "object",
          "description": "App Docker images for supported platforms",
          "properties": {
            "armhf": {
              "type": "string",
              "description": "Arm / ArmHF image"
            },
            "arm64": {
              "type": "string",
              "description": "Arm64 image"
            },
            "x86_64": {
              "type": "string",
              "description": "Default image (32/64bit)"
            }
          },
          "required": ["x86_64"]
        },
        "container_name": {
          "type": "string",
          "description": "Container name, which will be later prefix by vltos-",
          "pattern": "^[a-zA-Z0-9-_]+$"
        },
        "environment": {
          "type": "array",
          "description": "Environment variables for the container",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Environment variable name"
              },
              "value": {
                "type": "string",
                "description": "Environment variable value"
              },
              "description": {
                "type": "string",
                "description": "Environment variable description (Used by front-end)"
              }
            },
            "required": ["name", "value"],
            "minItems": 1
          }
        },
        "ports": {
          "type": "array",
          "description": "Ports for the container",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "Port to be exposed on HOST"
              },
              "container": {
                "type": "string",
                "description": "Port on container"
              },
              "protocol": {
                "type": "string",
                "description": "Protocol (tcp/udp) defaults to tcp",
                "enum": ["tcp", "udp"]
              },
              "description": {
                "type": "string",
                "description": "Port description (Used by front-end)"
              }
            },
            "required": ["host", "container", "description"],
            "minItems": 1
          }
        },
        "volumes": {
          "type": "array",
          "description": "Volume bindings for the container",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "Path on host",
                "pattern": "((\\.{2}\/{1})+|((\\.{1}\/{1})?)|(\/{1}))([a-zA-Z0-9])+$"
              },
              "container": {
                "type": "string",
                "description": "Path on container",
                "pattern": "((\\.{2}\/{1})+|((\\.{1}\/{1})?)|(\/{1}))([a-zA-Z0-9])+$"
              },
              "description": {
                "type": "string",
                "description": "Volume description (Used by front-end)"
              }
            },
            "required": ["host", "container"],
            "minItems": 1
          }
        },
        "Devices": {
          "type": "object",
          "description": "Devices for the container",
          "properties": {
            "host": {
              "type": "string",
              "description": "Path on host",
              "pattern": "((\\.{2}/{1})+|((\\.{1}/{1})?)|(/{1}))(([a-zA-Z0-9]+/{1})+)([a-zA-Z0-9])+$"
            },
            "container": {
              "type": "string",
              "description": "Path on container",
              "pattern": "((\\.{2}/{1})+|((\\.{1}/{1})?)|(/{1}))(([a-zA-Z0-9]+/{1})+)([a-zA-Z0-9])+$"
            },
            "description": {
              "type": "string",
              "description": "Device description (Used by front-end)"
            }
          },
          "required": ["host", "container"],
          "minItems": 1
        }
      },
      "required": ["images", "container_name"],
      "examples": [{
        "images": {
          "x86_64": "hello-world:latest",
          "armhf": "hello-world:latest",
          "arm64": "hello-world:latest"
        },
        "container_name": "helloworld",
        "environment": [{
          "name": "DISPLAY_NAME",
          "value": "Hello World",
          "description": "Name to be displayed on webUI"
        }],
        "ports": [{
          "host": "8080",
          "container": "8080",
          "protocol": "tcp",
          "description": "Port used by WebUI"
        }],
        "volumes": [{
          "host": "/var/www/html",
          "container": "/var/www/html",
          "description": "Place to save our hello world's"
        }],
        "devices": [{
          "host": "/dev/dri",
          "container": "/dev/dri",
          "description": "GPU Device for hardware acceleration"
        }]
      }]
    }
  },
  "required": ["App", "Services"]
}